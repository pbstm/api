{
  "openapi": "3.0.0",
  "info": {
    "title": "API Documentation",
    "description": "",
    "version": "1.0"
  },
  "paths": {
    "/api/v1/sign_up": {
      "post": {
        "summary": "User registration",
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "returns success with type Customer": {
                  "summary": "returns success with type Customer",
                  "value": {
                    "name": "Mrs. Kori Lind",
                    "email": "minh_kemmer@collins.org",
                    "password": "123123",
                    "password_confirmation": "123123",
                    "type": "Customer"
                  }
                },
                "returns success with type Photographer": {
                  "summary": "returns success with type Photographer",
                  "value": {
                    "name": "Manual Cartwright",
                    "email": "marquetta.wyman@zboncak-will.co",
                    "password": "123123",
                    "password_confirmation": "123123",
                    "type": "Photographer"
                  }
                },
                "is expected to respond with status code :unprocessable_entity (422)": {
                  "summary": "is expected to respond with status code :unprocessable_entity (422)",
                  "value": {
                  }
                },
                "without name": {
                  "summary": "without name",
                  "value": {
                    "name": "",
                    "email": "drew@pacocha.org",
                    "password": "123123",
                    "password_confirmation": "123123",
                    "type": "Customer"
                  }
                },
                "without password": {
                  "summary": "without password",
                  "value": {
                    "name": "Tereasa Murazik",
                    "email": "candie_kerluke@walter.co",
                    "password": "",
                    "password_confirmation": "123123",
                    "type": "Customer"
                  }
                },
                "when the password is less than 6 characters": {
                  "summary": "when the password is less than 6 characters",
                  "value": {
                    "name": "Dr. Beau Johns",
                    "email": "gale_harvey@moen.co",
                    "password": "12345",
                    "password_confirmation": "12345",
                    "type": "Customer"
                  }
                },
                "without password_confirmation": {
                  "summary": "without password_confirmation",
                  "value": {
                    "name": "Dottie Leannon",
                    "email": "alton@schinner.info",
                    "password": "123123",
                    "password_confirmation": "",
                    "type": "Customer"
                  }
                },
                "when the password is more than 72 characters": {
                  "summary": "when the password is more than 72 characters",
                  "value": {
                    "name": "Daron Mayer",
                    "email": "jake@willms.com",
                    "password": "1111111111111111111111111111111111111111111111111111111111111111111111111",
                    "password_confirmation": "1111111111111111111111111111111111111111111111111111111111111111111111111",
                    "type": "Customer"
                  }
                },
                "when the password is more than 511 characters": {
                  "summary": "when the password is more than 511 characters",
                  "value": {
                    "name": "Maryland Mitchell CPA",
                    "email": "elmira_leannon@morissette.name",
                    "password": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
                    "password_confirmation": "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
                    "type": "Customer"
                  }
                },
                "when the email is incorrect": {
                  "summary": "when the email is incorrect",
                  "value": {
                    "name": "Archie Ratke",
                    "email": "asdasd",
                    "password": "123123",
                    "password_confirmation": "123123",
                    "type": "Customer"
                  }
                },
                "when type user is incorrect": {
                  "summary": "when type user is incorrect",
                  "value": {
                    "name": "Jorge Prohaska",
                    "email": "dwight@volkman-blick.net",
                    "password": "123123",
                    "password_confirmation": "123123",
                    "type": "asdasd"
                  }
                },
                "when email is already in use ": {
                  "summary": "when email is already in use ",
                  "value": {
                    "name": "Raymond Hammes",
                    "email": "sharice@franecki-spencer.com",
                    "password": "123123",
                    "password_confirmation": "123123",
                    "type": "Customer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "returns success with type Customer": {
                    "summary": "returns success with type Customer",
                    "value": {
                      "success": true,
                      "user": {
                        "id": 1,
                        "name": "Mrs. Kori Lind",
                        "email": "minh_kemmer@collins.org",
                        "created_at": "2021-06-14T17:47:14+00:00",
                        "updated_at": "2021-06-14T17:47:14+00:00",
                        "avatar_url": null,
                        "type": "Customer"
                      }
                    }
                  },
                  "returns success with type Photographer": {
                    "summary": "returns success with type Photographer",
                    "value": {
                      "success": true,
                      "user": {
                        "id": 2,
                        "name": "Manual Cartwright",
                        "email": "marquetta.wyman@zboncak-will.co",
                        "created_at": "2021-06-14T17:47:14+00:00",
                        "updated_at": "2021-06-14T17:47:14+00:00",
                        "avatar_url": null,
                        "type": "Photographer"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "is expected to respond with status code :unprocessable_entity (422)": {
                    "summary": "is expected to respond with status code :unprocessable_entity (422)",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "name",
                          "messages": [
                            "Name is required"
                          ]
                        },
                        {
                          "key": "email",
                          "messages": [
                            "Email is required"
                          ]
                        },
                        {
                          "key": "password",
                          "messages": [
                            "Password is required"
                          ]
                        },
                        {
                          "key": "password_confirmation",
                          "messages": [
                            "Password confirmation is required"
                          ]
                        },
                        {
                          "key": "type",
                          "messages": [
                            "Type is required"
                          ]
                        }
                      ]
                    }
                  },
                  "without name": {
                    "summary": "without name",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "name",
                          "messages": [
                            "Name can't be blank"
                          ]
                        }
                      ]
                    }
                  },
                  "without password": {
                    "summary": "without password",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "password",
                          "messages": [
                            "Password can't be blank",
                            "Password is too short (minimum is 6 characters)"
                          ]
                        }
                      ]
                    }
                  },
                  "when the password is less than 6 characters": {
                    "summary": "when the password is less than 6 characters",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "password",
                          "messages": [
                            "Password is too short (minimum is 6 characters)"
                          ]
                        }
                      ]
                    }
                  },
                  "without password_confirmation": {
                    "summary": "without password_confirmation",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "password_confirmation",
                          "messages": [
                            "Password confirmation doesn't match Password"
                          ]
                        }
                      ]
                    }
                  },
                  "when the password is more than 72 characters": {
                    "summary": "when the password is more than 72 characters",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "password",
                          "messages": [
                            "Password is too long (maximum is 72 characters)"
                          ]
                        }
                      ]
                    }
                  },
                  "when the password is more than 511 characters": {
                    "summary": "when the password is more than 511 characters",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "password",
                          "messages": [
                            "inappropriate password"
                          ]
                        }
                      ]
                    }
                  },
                  "when the email is incorrect": {
                    "summary": "when the email is incorrect",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "email",
                          "messages": [
                            "Email is invalid"
                          ]
                        }
                      ]
                    }
                  },
                  "when type user is incorrect": {
                    "summary": "when type user is incorrect",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "type",
                          "messages": [
                            "Type wrong"
                          ]
                        }
                      ]
                    }
                  },
                  "when email is already in use ": {
                    "summary": "when email is already in use ",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "email",
                          "messages": [
                            "Email has already been taken"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/profile/destroy": {
      "delete": {
        "summary": "Destroy current user",
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/json"
          },
          {
            "name": "Authorization",
            "in": "header",
            "example": "eyJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjR9.zyHFrQRqP0ymbLK1vnx028YRhMub_VcXyvkcykMAq1U"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "returns success true": {
                  "summary": "returns success true",
                  "value": {
                  }
                },
                "returns errors": {
                  "summary": "returns errors",
                  "value": {
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "returns success true": {
                    "summary": "returns success true",
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "returns errors": {
                    "summary": "returns errors",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "user",
                          "messages": [
                            "user not authorized"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/sign_in": {
      "post": {
        "summary": "User login",
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "example": "application/json"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "returns success": {
                  "summary": "returns success",
                  "value": {
                    "email": "treva.gislason@connelly-littel.co",
                    "password": "123123"
                  }
                },
                "is expected to respond with status code :unauthorized (401)": {
                  "summary": "is expected to respond with status code :unauthorized (401)",
                  "value": {
                  }
                },
                "without email": {
                  "summary": "without email",
                  "value": {
                    "password": "123123"
                  }
                },
                "without password": {
                  "summary": "without password",
                  "value": {
                    "email": "odis@marvin.biz"
                  }
                },
                "when password or email incorrect": {
                  "summary": "when password or email incorrect",
                  "value": {
                    "email": "tanya@hettinger-pollich.biz",
                    "password": "xxx"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "returns success": {
                    "summary": "returns success",
                    "value": {
                      "success": true,
                      "token": "eyJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjYsImV4cCI6MTYyNDEyNDgzNH0.v1M4AJ78Mh3pj9Hf4uYzcQL5BtIn3nxYFIdWOWMzOcg"
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "is expected to respond with status code :unauthorized (401)": {
                    "summary": "is expected to respond with status code :unauthorized (401)",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "email",
                          "messages": [
                            "Email is required"
                          ]
                        },
                        {
                          "key": "password",
                          "messages": [
                            "Password is required"
                          ]
                        }
                      ]
                    }
                  },
                  "without email": {
                    "summary": "without email",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "email",
                          "messages": [
                            "Email is required"
                          ]
                        }
                      ]
                    }
                  },
                  "without password": {
                    "summary": "without password",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "password",
                          "messages": [
                            "Password is required"
                          ]
                        }
                      ]
                    }
                  },
                  "when password or email incorrect": {
                    "summary": "when password or email incorrect",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "login",
                          "messages": [
                            "Login wrong email or password"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/profile/show": {
      "get": {
        "summary": "Show current user profile",
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "example": "eyJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjExfQ.q-hJQEZtnGZgH4ne8pnS4A4nBWUfHUdKNz1qJx4CJp0"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "returns user info": {
                    "summary": "returns user info",
                    "value": {
                      "success": true,
                      "user": {
                        "id": 11,
                        "name": "Estell Douglas",
                        "email": "fermin_ondricka@weimann.io",
                        "created_at": "2021-06-14T17:47:15+00:00",
                        "updated_at": "2021-06-14T17:47:15+00:00",
                        "avatar_url": "http://localhost:3010/uploads/user/avatar/11/7d5f0166dc9289b30f3c2f0ccd21c9b1518bd5a0.jpg",
                        "type": "User"
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    },
    "/api/v1/profile/update": {
      "put": {
        "summary": "Update current user profile",
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "example": "multipart/form-data; boundary=----------XnJLe9ZIbbGUYtzPQJ16u1"
          },
          {
            "name": "Authorization",
            "in": "header",
            "example": "eyJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjEyfQ.tE2mlOK8gjX0lij7_Ics2UZbfqYLppHs7qsMPHuzAE4"
          },
          {
            "name": "Accept",
            "in": "header",
            "example": "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5"
          }
        ],
        "requestBody": {
          "content": {
            "text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5": {
              "examples": {
                "returns with params": {
                  "summary": "returns with params",
                  "value": "{\n  \"name\": \"vasya\",\n  \"email\": \"vasya@mail.com\",\n  \"current_password\": \"123123\",\n  \"password\": \"123qwe\",\n  \"password_confirmation\": \"123qwe\",\n  \"avatar\": {\n    \"filename\": \"test.jpg\",\n    \"type\": \"text/plain\",\n    \"name\": \"avatar\",\n    \"tempfile\": \"#<File:0x000055faa07f4a90>\",\n    \"head\": \"Content-Disposition: form-data; name=\\\"avatar\\\"; filename=\\\"test.jpg\\\"\\r\\nContent-Type: text/plain\\r\\nContent-Length: 107\\r\\n\"\n  }\n}"
                },
                "update email without current_password": {
                  "summary": "update email without current_password",
                  "value": {
                    "email": "vasya@mail.com"
                  }
                },
                "update password without current_password": {
                  "summary": "update password without current_password",
                  "value": {
                    "password": "123456"
                  }
                },
                "update password without password_confirmation": {
                  "summary": "update password without password_confirmation",
                  "value": {
                    "password": "123456",
                    "current_password": "123123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "returns with params": {
                    "summary": "returns with params",
                    "value": {
                      "success": true
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json; charset=utf-8": {
                "examples": {
                  "update email without current_password": {
                    "summary": "update email without current_password",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "current_password",
                          "messages": [
                            "Current password is required"
                          ]
                        }
                      ]
                    }
                  },
                  "update password without current_password": {
                    "summary": "update password without current_password",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "current_password",
                          "messages": [
                            "Current password is required"
                          ]
                        }
                      ]
                    }
                  },
                  "update password without password_confirmation": {
                    "summary": "update password without password_confirmation",
                    "value": {
                      "success": false,
                      "errors": [
                        {
                          "key": "password_confirmation",
                          "messages": [
                            "Password confirmation doesn't match password"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "Content-Type": {
                "description": "application/json; charset=utf-8"
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Users",
      "description": ""
    }
  ],
  "x-tagGroups": [
    {
      "name": "Users",
      "tags": [
        "Users"
      ]
    }
  ]
}
